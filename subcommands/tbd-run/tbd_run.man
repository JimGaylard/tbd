.TH tbd-run 1  "January 15, 2015" "version 0.1" "Tooling & Build Daemon"
.SH NAME
tbd-run \- Store the execution of a command in a git repository
.SH SYNOPSIS
.TP
.B tbd-run
.br
.I [-prefix=refs/builds]
.br
.I [-propagateErrors=true|false]
.br
.I [-debug]
.br
.I <command>

.SH DESCRIPTION
tbd-run is intended to support decentralized continuous integration by storing build outputs alongside the code which created it.
.PP
This has several advantages over traditional centralized CI tools:
 * A successful local build could allow CI to be skipped
 * Developers have a local copy of past build state to investigate failures
 * By building a tree, rather than a commit, a rebuild is not necesary after a fast-forward merge
.PP
tbd-run defaults to storing build state under
.I refs/builds/<worktree git SHA>/.
For instance, the stdout of a build run might be stored in refs/builds/ec98726595302b1163762d7b544093f6cac640df/STDOUT.
The following are also stored: STDERR COMBINEDOUTPUT WORKTREE EXITCODE
.SH OPTIONS
.TP
\-h
display a short help text
.TP
\-prefix
Specify the ref prefix to store the outputs of <command>
.TP
\-debug
Print diagnostic information
.TP
\-propagateErrors
tbd-run will exit with the same code as <command>.
.SH EXAMPLES
.TP
Run tests.sh and store the output under refs/tests. Exit with an error if tests.sh fails

tbd-build -prefix=refs/tests -propagateErrors=true tests.sh
.PP

.SH EXIT STATUS
With propagateErrors set to false, tbd-build returns a zero exit status after <command> executes and the build results are written to git.

If propateErrors is true and the exit code would otherwise be zero, tbd-build returns the exit status of <command>.
.SH AUTHOR
Daniel Heath (daniel (at) heath.cc)
